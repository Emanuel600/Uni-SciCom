    Para testar as interpolações, serão utilizadas funções definidas para gerar os pontos e
  verificar o erro real da aproximação.
  
    == Primeira ==
    f(x)= 3x^3-2x^2+3x-15
    
    x= [1 2 3 4 5 6]
    y= 3*x.^3-2*x.^2+3*x-15= [ -11 7 57 157 325 579 ]
    
    Para f(1.5) temos: Valor real= -4.875
    == Polinomial:
    ye= -4.875 com erro= 0%
    == Newton:
    ye= -4.875 com erro= 0%
    == Lagrange:
    ye= -4.875 com erro= 0%
    == Splines:
    = Natural:
    ye= -4.2033493 com erro= -13.777451%
    = Clamped: f'(1)=9*1^2-4*1+3=8 e f'(6)=9*6^2-4*6+3=303
    ye= -4.6985646 com erro= 3.6191878%
    = Not-A-Knot:
    ye= -4.875 com erro= 0%
    
    == Segunda ==
    f(x)= log(3*x)
    x= [ 1 2 3 4 5 6 ]
    y= [ 1.0986123 1.7917595 2.1972246 2.4849066 2.7080502 2.8903718 ]
    
    Para f(3.25) temos: Valor real= 2.2772673
    == Polinomial: // Resultado inesperado ao reduzir o intervalo
    ye= 2.2767838 com erro= 0.0212299%, fazendo com os pontos x=[2 3 4]: ye= 2.2801873 com erro= 0.1282230%
    == Newton: // Mesmo resultado com menos esforço computacional
    ye= 2.2767838 com erro= 0.0212299%, com x=[2 3 4]: ye= 2.2801873 com erro= 0.1282230%
    == Lagrange:
    ye= 2.2767838 com erro= 0.0212299%, com x=[2 3 4]: ye= 2.2801873 com erro= 0.1282230%
    == Splines:
    = Natural:
    ye= 2.2749333 com erro= 0.1024887%
    = Clamped: f'(1)=1 e f'(6)=1/6
    ye= 2.2725449 com erro= 0.2073705%
    = Not-A-Knot:
    ye= 2.2765100 com erro= 0.0332523%
    
    == Terceira ==
    f(x)= sin(3*x-5)
    x=[ 1 2 3 4 5 6 ]
    y= sin(3*x-5)= [ -0.9092974 0.841471 -0.7568025 0.6569866 -0.5440211 0.420167]
    
    Para f(4.39): Valor real= 0.9504804
    == Polinomial:
    ye= 0.7045035 com erro= 25.879217%, com x= [3 4 5]: ye= 0.4996237 e erro= 47.434612%
    == Newton:
    ye= 0.7045035 com erro= 25.879217%, com x= [3 4 5]: ye= 0.4996237 e erro= 47.434612%
    == Lagrange:
    ye= 0.7045035 com erro= 25.879217%, com x= [3 4 5]: ye= 0.4996237 e erro= 47.434612%
    == Splines:
    = Natural:
    ye= 0.3702374 com erro= 61.047339%, com x=[3 4 5]: ye= 0.4389728 e erro= 53.815691%
    = Clamped: f'(1)=3*cos(-2) e f'(6)=3*cos(13)
    ye= 0.2759460 com erro= 70.967733%, com x=[3 4 5]: ye= 0.4532327 e erro= 52.315407%
    = Not-A-Knot:
    ye= 0.4643561 com erro= 51.145119%, com x=[3 4 5]: ye= 0.6437343 e erro= 32.272742%

    == Quarta ==
    f(x)=tan(x/5)
    x=[ 1 2 3 4 5 6 ]
    y=tan(x/5)= [ 0.20271 0.4227932 0.6841368 1.0296386 1.5574077 2.5721516 ]
    
    Para f(3.5): Valor real= 0.8422884
    == Polinomial:
    ye= 0.8433042 com erro= 0.1205982%
    == Newton:
    ye= 0.8433042 com erro= 0.1205982%
    == Lagrange:
    ye= 0.8433042 com erro= 0.1205982%
    == Splines:
    = Natural:
    ye= 0.8462798 com erro= 0.4738754%
    = Clamped: f'(1)= sec(1/5)^2/5 e f'(2)= sec(6/5)^2/5
    ye= 0.8567303 com erro= 1.7146073%
    = Not-A-Knot:
    ye= 0.8435087 com erro= 0.1448819%

    == Quinta ==
    f(x)=cos(5x/7)
    x=[ 0 3 4 5 7 9 ]
    y= cos(5*x/7)= [ 1 -0.5413659 -0.9598162 -0.9090341 0.2836622 0.98945 ]
    
    Para f(1): Valor real= 0.7555613
    == Polinomial:
    ye= 0.9134697 com erro= 20.899479%
    == Newton:
    ye= 0.9134697 com erro= 20.899479%
    == Lagrange:
    ye= 0.9134697 com erro= 20.899479%
    == Splines:
    = Natural:
    ye= 0.4857559 com erro= 35.709275%
    = Clamped: f'(0)= 0 e f'(9)= -5*sin(45/7)/7
    ye= 0.7305264 com erro= 3.3134297%
    = Not-A-Knot:
    ye= 0.7218440 com erro= 4.4625605%
    
    Para f(8): Valor real= 0.8424943
    == Polinomial:
    ye= 0.9003290 com erro= 6.8646987%
    == Newton:
    ye= 0.9003290 com erro= 6.8646987%
    == Lagrange:
    ye= 0.9003290 com erro= 6.8646987%
    == Splines:
    = Natural:
    ye= 0.7171441 com erro= 14.878462%
    = Clamped: f'(0)= 0 e f'(9)= -5*sin(45/7)/7
    ye= 0.7950093 com erro= 5.6362349%
    = Not-A-Knot:
    ye= 0.8527270 com erro= 1.2145688%
    
    => Resultado <=
    Ao analisar as saídas, se percebe que os métodos "Polinomial, Newton e Lagrange" sempre
  concordam em seu valor estimado apesar de utilizarem formas diferentes de calcular a estimativa.
  
    As splines rotinamente performam pior do que os métodos "Polinomial, Newton e Lagrange" em funções
  com maior variação. Quando é levado em consideração que splines foram feitas para estimar valores de
  funções que não apresentam grande variação, este resultado conforma com o esperado.
  
    Quando tudo isso é levado em consideração, o método de Newton parece ser o melhor método na grande
  maioria das situações, com exceção de funções que apresentam pouca variação no intervalo dado (isto pode
  ser visto com um gráfico dos pontos a serem interpolados). Um outro motivo de escolher uma spline seria para
  calcular o trajeto de um objeto que há de passar por certos pontos no espaço em tempo pré-determinado, uma
  vez que apresentam uma trajetória mais natural (sendo que o tipo específico de spline deve ser escolhido
  levando em conta suas características).
